# --- Configura��o do Banco de Dados H2 ---

# Habilita o console web do H2
spring.h2.console.enabled=true
# Define a URL para acessar o console
spring.h2.console.path=/h2-console

# URL de conex�o JDBC. 'mem' significa em mem�ria. 'karaokedb' � o nome do nosso banco.
spring.datasource.url=jdbc:h2:mem:karaokedb
# Driver JDBC do H2
spring.datasource.driverClassName=org.h2.Driver
# Usu�rio padr�o do H2
spring.datasource.username=admin
# Senha (pode deixar em branco, mas � bom definir para o console)
spring.datasource.password=123

# --- Configura��o do JPA (Hibernate) ---

# Diz ao Hibernate qual "dialeto" SQL usar para se comunicar com o H2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# MUITO IMPORTANTE: Define como as tabelas do banco ser�o criadas.
# 'update': atualiza o schema (tabelas) se houver mudan�as nos seus @Entity.
# 'create-drop': cria as tabelas ao iniciar e as apaga ao finalizar. �timo para testes.
spring.jpa.hibernate.ddl-auto=create-drop

# --- Configura��o do JWT (JSON Web Token) ---

# Chave secreta em Base64 para assinatura dos tokens (DEVE SER LONGA)
jwt.secret-key=bWluaGFjaGF2ZXN1cGVyc2VjcmV0YWVjdW1wcmlkYTEyMzQ1Njc4OTA=
# Tempo de expira��o do token em milissegundos (7200000 ms = 2 horas)
jwt.expiration=7200000